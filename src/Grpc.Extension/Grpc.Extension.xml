<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Grpc.Extension</name>
    </assembly>
    <members>
        <member name="T:Grpc.Extension.BaseService.CmdService">
            <summary>
            执行命令的服务
            </summary>
        </member>
        <member name="M:Grpc.Extension.BaseService.CmdService.RegisterMethod(Grpc.Core.ServerServiceDefinition.Builder)">
            <summary>
            注册服务方法
            </summary>
        </member>
        <member name="M:Grpc.Extension.BaseService.CmdService.AddDelThrottle(Grpc.Extension.Model.AddDelThrottleRQ,Grpc.Core.ServerCallContext)">
            <summary>
            添加删除截流的method
            </summary>
        </member>
        <member name="M:Grpc.Extension.BaseService.CmdService.AddDelSaveResponseEnable(Grpc.Extension.Model.AddDelSaveResponseEnableRQ,Grpc.Core.ServerCallContext)">
            <summary>
            添加删除是否允许保存响应的method
            </summary>
        </member>
        <member name="T:Grpc.Extension.BaseService.GrpcServiceExtension">
            <summary>
            GrpcServiceExtension
            </summary>
        </member>
        <member name="M:Grpc.Extension.BaseService.GrpcServiceExtension.BuildMethod``2(Grpc.Extension.Abstract.IGrpcService,System.String,System.String,System.String,Grpc.Core.MethodType)">
            <summary>
            生成Grpc方法（CodeFirst方式，用于生成BaseService）
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="srv"></param>
            <param name="methodName"></param>
            <param name="package"></param>
            <param name="srvName"></param>
            <param name="mType"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.BaseService.GrpcServiceExtension.BuildMeta(System.Collections.IDictionary)">
            <summary>
            生成Grpc元数据信息(1.19以前可以反射处理)
            </summary>
            <param name="callHandlers"></param>
        </member>
        <member name="T:Grpc.Extension.BaseService.IGrpcBaseService">
            <summary>
            基础服务
            </summary>
        </member>
        <member name="T:Grpc.Extension.BaseService.MetaService">
            <summary>
            Grpc元数据服务
            </summary>
        </member>
        <member name="M:Grpc.Extension.BaseService.MetaService.RegisterMethod(Grpc.Core.ServerServiceDefinition.Builder)">
            <summary>
            注册grpc服务方法
            </summary>
        </member>
        <member name="M:Grpc.Extension.BaseService.MetaService.Info(Grpc.Extension.Model.InfoRQ,Grpc.Core.ServerCallContext)">
            <summary>
            服务基本信息
            </summary>
        </member>
        <member name="M:Grpc.Extension.BaseService.MetaService.MethodInfo(Grpc.Extension.Model.MethodInfoRQ,Grpc.Core.ServerCallContext)">
            <summary>
            服务方法的详细信息
            </summary>
        </member>
        <member name="M:Grpc.Extension.BaseService.MetaService.MethodInvoke(Grpc.Extension.Model.MethodInvokeRQ,Grpc.Core.ServerCallContext)">
            <summary>
            服务方法调用
            </summary>
        </member>
        <member name="T:Grpc.Extension.Common.CommonError">
            <summary>
            统一错误构建
            </summary>
        </member>
        <member name="M:Grpc.Extension.Common.CommonError.BuildRpcException(System.Exception)">
            <summary>
            返回一个rpc异常到客户端
            </summary>
        </member>
        <member name="T:Grpc.Extension.GrpcExtensions">
            <summary>
            Grpc扩展
            </summary>
        </member>
        <member name="M:Grpc.Extension.GrpcExtensions.StartAndRegisterService(Grpc.Core.Server)">
            <summary>
            启动并注册服务
            </summary>
            <param name="server"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.GrpcExtensions.StopAndDeRegisterService(Grpc.Core.Server)">
            <summary>
            停止并反注册服务
            </summary>
            <param name="server"></param>
            <returns></returns>
        </member>
        <member name="T:Grpc.Extension.Interceptors.ServerInterceptor">
            <summary>
            服务端拦截器
            </summary>
        </member>
        <member name="M:Grpc.Extension.Interceptors.ServerInterceptor.UnaryServerHandler``2(``0,Grpc.Core.ServerCallContext,Grpc.Core.UnaryServerMethod{``0,``1})">
            <summary>
            单请求
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="request"></param>
            <param name="context"></param>
            <param name="continuation"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.Interceptors.ServerInterceptor.ClientStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.ServerCallContext,Grpc.Core.ClientStreamingServerMethod{``0,``1})">
            <summary>
            客户端流请求
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="requestStream"></param>
            <param name="context"></param>
            <param name="continuation"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.Interceptors.ServerInterceptor.ServerStreamingServerHandler``2(``0,Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.ServerStreamingServerMethod{``0,``1})">
            <summary>
            服务端流返回
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="request"></param>
            <param name="responseStream"></param>
            <param name="context"></param>
            <param name="continuation"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.Interceptors.ServerInterceptor.DuplexStreamingServerHandler``2(Grpc.Core.IAsyncStreamReader{``0},Grpc.Core.IServerStreamWriter{``1},Grpc.Core.ServerCallContext,Grpc.Core.DuplexStreamingServerMethod{``0,``1})">
            <summary>
            双向流
            </summary>
            <typeparam name="TRequest"></typeparam>
            <typeparam name="TResponse"></typeparam>
            <param name="requestStream"></param>
            <param name="responseStream"></param>
            <param name="context"></param>
            <param name="continuation"></param>
            <returns></returns>
        </member>
        <member name="T:Grpc.Extension.Interceptors.JaegerTracingInterceptor">
            <summary>
            JaegerTracingMiddleware
            </summary>
        </member>
        <member name="T:Grpc.Extension.Interceptors.MonitorInterceptor">
            <summary>
            性能监控,记录日志
            </summary>
        </member>
        <member name="T:Grpc.Extension.Interceptors.ThrottleInterceptor">
            <summary>
            手动熔断处理
            </summary>
        </member>
        <member name="M:Grpc.Extension.Internal.GrpcMethodHelper.AutoRegisterMethod(Grpc.Extension.Abstract.IGrpcService,Grpc.Core.ServerServiceDefinition.Builder,System.String,System.String)">
            <summary>
            自动注册服务方法
            </summary>
            <param name="srv"></param>
            <param name="builder"></param>
            <param name="package"></param>
            <param name="serviceName"></param>
        </member>
        <member name="T:Grpc.Extension.Internal.NotGrpcMethodAttribute">
            <summary>
            非Grpc方法
            </summary>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoCommentGenerator.GetComments(System.String[],System.String)">
            <summary>
            获取注释集合
            </summary>
            <param name="types"></param>
            <param name="fullName"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoCommentGenerator.GetComment(System.String,System.String)">
            <summary>
            获取注释
            </summary>
            <param name="type"></param>
            <param name="fullName"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoCommentGenerator.AddMessageComment``1(System.String)">
            <summary>
            给Message加入注释
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="proto"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoCommentGenerator.GetProtoTypeFullName``1(System.String)">
            <summary>
            根据名字获取ProtoType的FullName
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoCommentGenerator.AddServiceComment(Grpc.Extension.Model.ProtoMethodInfo,System.Text.StringBuilder)">
            <summary>
            给Service加入注释
            </summary>
            <param name="proto"></param>
            <param name="sb"></param>
        </member>
        <member name="P:Grpc.Extension.Internal.ProtoGenerator.protoMsgStartWithKeywords">
            <summary>
            proto的message可能的开头的关键字
            </summary>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoGenerator.AddProto``1(System.String)">
            <summary>
            添加proto
            </summary>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoGenerator.GetProto(System.String)">
            <summary>
            获取实体对应的proto
            </summary>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoGenerator.FilterHead(System.String)">
            <summary>
            过滤头部 只保留message部分
            </summary>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoGenerator.GenGrpcMessageProto(System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            生成grpc的message的proto内容
            </summary>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoGenerator.GenGrpcServiceProto(System.String,System.String,System.String,System.Collections.Generic.List{Grpc.Extension.Model.ProtoMethodInfo},System.Boolean)">
            <summary>
            生成grpc的service的proto内容
            </summary>
        </member>
        <member name="M:Grpc.Extension.Internal.ProtoGenerator.Gen(System.String,System.Boolean)">
            <summary>
            生成proto文件
            </summary>
        </member>
        <member name="P:Grpc.Extension.Model.ProtoInfo.Methods">
            <summary>
            grpc服务方法信息 用于生成proto文件
            </summary>
        </member>
        <member name="T:Grpc.Extension.Model.ProtoMethodInfo">
            <summary>
            注册到grpc的服务方法信息
            </summary>
        </member>
        <member name="P:Grpc.Extension.Model.XmlCommentInfo.FullName">
            <summary>
            FullName(Math.MathGrpc.Add(Math.Model.AddRequest,Grpc.Core.ServerCallContext))
            </summary>
        </member>
        <member name="P:Grpc.Extension.Model.XmlCommentInfo.Type">
            <summary>
            Type(T:类，M:方法，P:属性，F:字段，E:事件）
            </summary>
        </member>
        <member name="P:Grpc.Extension.Model.XmlCommentInfo.Summary">
            <summary>
            Summary(注释)
            </summary>
        </member>
        <member name="T:Grpc.Extension.GrpcExtensionsOptions">
            <summary>
            GrpcServerOptions
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcExtensionsOptions.GlobalPackage">
            <summary>
            grpc服务的包名
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcExtensionsOptions.GlobalService">
            <summary>
            grpc服务的对外服务名
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcExtensionsOptions.GlobalSaveResponseEnable">
            <summary>
            是否输出响应内容
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcExtensionsOptions.ProtoNameSpace">
            <summary>
            生成proto文件的c#命名空间
            </summary>
        </member>
        <member name="F:Grpc.Extension.GrpcExtensionsOptions.GenBaseServiceProtoEnable">
            <summary>
            是否为基础服务生成proto文件
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcExtensionsOptions.FillPropExcludePrefixs">
            <summary>
            生成Json对象时排除前缀
            </summary>
        </member>
        <member name="T:Grpc.Extension.GrpcServerOptions">
            <summary>
            GrpcServerOptions
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.ServiceAddress">
            <summary>
            Grpc服务地址(192.168.*.*:)
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.DiscoveryUrl">
            <summary>
            服务注册地址(http://192.168.8.6:8500)
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.DiscoveryServiceName">
            <summary>
            服务注册名
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.DiscoveryServiceTags">
            <summary>
            服务注册Tags(可用于版本标记)
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.DiscoveryTTLInterval">
            <summary>
            服务TTL(秒)
            </summary>
        </member>
        <member name="P:Grpc.Extension.GrpcServerOptions.DefaultErrorCode">
            <summary>
            默认错误码
            </summary>
        </member>
        <member name="T:Grpc.Extension.JaegerOptions">
            <summary>
            JaegerOptions
            </summary>
        </member>
        <member name="P:Grpc.Extension.JaegerOptions.ServiceName">
            <summary>
            服务名
            </summary>
        </member>
        <member name="P:Grpc.Extension.JaegerOptions.AgentIp">
            <summary>
            AgentIp
            </summary>
        </member>
        <member name="P:Grpc.Extension.JaegerOptions.AgentPort">
            <summary>
            AgentPort
            </summary>
        </member>
        <member name="T:Grpc.Extension.ServerBuilder">
            <summary>
            ServerBuilder
            </summary>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.#ctor(System.IServiceProvider,Microsoft.Extensions.Configuration.IConfiguration,System.Collections.Generic.IEnumerable{Grpc.Extension.Interceptors.ServerInterceptor},System.Collections.Generic.IEnumerable{Grpc.Extension.Abstract.IGrpcService})">
            <summary>
            ServerBuilder
            </summary>
            <param name="serviceProvider"></param>
            <param name="conf"></param>
            <param name="serverInterceptors"></param>
            <param name="grpcServices"></param>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseOptions(System.Action{Grpc.Extension.GrpcExtensionsOptions})">
            <summary>
            注入基本配制
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.InitGrpcOptions(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            从配制文件初始化
            </summary>
            <param name="conf"></param>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseGrpcOptions(System.Action{Grpc.Extension.GrpcServerOptions})">
            <summary>
            注入Grpc,Discovery配制
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseGrpcService(Grpc.Core.ServerServiceDefinition)">
            <summary>
            注入GrpcService
            </summary>
            <param name="serviceDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseGrpcService">
            <summary>
            注入IGrpcService
            </summary>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseGrpcService(System.Collections.Generic.IEnumerable{Grpc.Extension.Abstract.IGrpcService})">
            <summary>
            注入IGrpcService
            </summary>
            <param name="grpcServices"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseProtoGenerate(System.String,System.Boolean)">
            <summary>
            CodeFirst生成proto文件
            </summary>
            <param name="dir">生成目录</param>
            <param name="spiltProto">是否拆分service和message协议</param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseDashBoard">
            <summary>
            使用DashBoard(提供基础服务)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseInterceptor(Grpc.Extension.Interceptors.ServerInterceptor)">
            <summary>
            注入服务端中间件
            </summary>
            <param name="interceptor"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseInterceptor(System.Collections.Generic.IEnumerable{Grpc.Extension.Interceptors.ServerInterceptor})">
            <summary>
            注入服务端中间件
            </summary>
            <param name="interceptors"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseLogger(System.Action{Grpc.Extension.Abstract.LoggerAccessor})">
            <summary>
            配制日志
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.CheckUseJaeger">
            <summary>
            有AddJaeger就使用Jaeger
            </summary>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.UseChannelOptions(System.Collections.Generic.IEnumerable{Grpc.Core.ChannelOption})">
            <summary>
            配制ChannelOptions
            </summary>
            <param name="channelOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServerBuilder.Build">
            <summary>
            构建Server
            </summary>
            <returns></returns>
        </member>
        <member name="T:Grpc.Extension.ServiceCollectionExtensions">
            <summary>
            ServiceCollectionExtensions
            </summary>
        </member>
        <member name="M:Grpc.Extension.ServiceCollectionExtensions.AddGrpcExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加Grpc扩展
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServiceCollectionExtensions.AddJaeger(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            添加Jaeger和Interceptor
            </summary>
            <param name="services"></param>
            <param name="conf"></param>
            <returns></returns>
        </member>
        <member name="M:Grpc.Extension.ServiceCollectionExtensions.AddServerInterceptor``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加服务端Interceptor
            </summary>
            <typeparam name="T"></typeparam>
            <param name="services"></param>
            <returns></returns>
        </member>
    </members>
</doc>
